
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define INDEX_SIZE 3

typedef struct {
	int index;
	int key;
}itable;

itable indexTable[INDEX_SIZE];

void sequentialSearch2(int a[], int begin, int end, int key) {
	int i = begin;
	printf("\n %d를 검색하여라!->> ", key);
	while (i < end && a[i] < key) i++;
	if (a[i] == key) printf("%d번째에 검색 성공!\n\n", (i - begin) + 1);
	else printf("%d번째에 검색 실패! \n\n", (i - begin) + 1);
}
void makeindexTable(int a[], int size) {
	int i, n;
	n = size / INDEX_SIZE;
	if (size % INDEX_SIZE > 0) n = n + 1;
	for (i = 0; i < INDEX_SIZE; i++) {
		indexTable[i].index = i * n;
		indexTable[i].key = a[i * n];
	}
}
void indexSearch(int a[], int n, int key) {
	int i, begin, end;
	if (key<a[0] || key>a[n - 1])
		printf("\n찾는 키가 없습니다. 검색 실패! \n");
	for (i = 0; i < INDEX_SIZE; i++)
		if ((indexTable[i].key <= key) && (indexTable[i + 1].key > key)) {
			begin = indexTable[i].index;
			end = indexTable[i + 1].index;
			break;
		}
	if (i == INDEX_SIZE) {  //i can't understand why this sentence need;;
		begin = indexTable[i - 1].index;
		end = n;
	}
	sequentialSearch2(a, begin, end, key);
}
void main() {
	int a[] = { 2,3,7,10,11,20,30 };
	int n = 7, m;
	printf("\n\t<< 색인 순차 검색 >>\n");
	puts("2,3,7,10,11,20,30 의 배열에서 찾을 값을 입력하시오.");
	scanf("%d", &m);
	makeindexTable(a, n);
	indexSearch(a, n, m);
}
